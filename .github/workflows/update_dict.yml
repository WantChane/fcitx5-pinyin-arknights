name: update and release
on:
  schedule:
    - cron: "0 8 * * *"
  workflow_dispatch:
    inputs:
      incremental_dicts:
        description: "Space-separated dictionary names for incremental update"
        required: false
        type: string
        default: ""
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  check-incremental:
    runs-on: ubuntu-latest
    outputs:
      incremental_dicts: ${{ steps.determine-type.outputs.incremental_dicts }}

    steps:
      - name: Install system dependencies
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true }}
        run: sudo apt install -y jq

      - name: Parse PR labels
        id: parse-pr-labels
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true }}
        run: |
          DICTS=$(echo '${{ toJson(github.event.pull_request.labels) }}' | jq -r '[ .[] | select(.name | startswith("incremental: ")) | .name | sub("^incremental: "; "") ] | join(" ")')
          echo "incremental_dicts=${DICTS}" >> $GITHUB_OUTPUT
          echo "Detected incremental dictionaries: ${DICTS}"

      - name: Determine build type
        id: determine-type
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            incremental_dicts="${{ inputs.incremental_dicts }}"
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            incremental_dicts="${{ steps.parse-pr-labels.outputs.incremental_dicts }}"
          else
            incremental_dicts=""
          fi
          echo "incremental_dicts=$incremental_dicts" >> $GITHUB_OUTPUT
          echo "Build dicts: $incremental_dicts"

  update:
    runs-on: ubuntu-latest
    needs: check-incremental
    permissions:
      issues: write
      contents: write
    outputs:
      current_version: ${{ steps.arkdicts-update.outputs.current_version}}
      changes_committed: ${{ steps.commit-and-push.outputs.changes_committed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: install system dependencies
        run: sudo apt install -y libime-bin

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Minimize uv cache
        run: uv cache prune --ci

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Sync labels
        run: uv run arkdicts label
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Backup old version
        run: cp -r data{,.bak}

      - name: Update
        id: arkdicts-update
        run: uv run arkdicts update
        env:
          SELECT_DICTIONARIES: ${{ needs.check-incremental.outputs.incremental_dicts }}

      - name: Generate diff file
        id: arkdicts-diff
        run: uv run arkdicts diff data{.bak,} -m ./data/changes.md

      - name: Commit version changes
        if: steps.arkdicts-update.outputs.version_changed == 'true' && steps.arkdicts-diff.outputs.diff_result == 'true'
        run: git add version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit data folder
        if: steps.arkdicts-diff.outputs.diff_result == 'true'
        run: git add data
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push if any changes
        id: commit-and-push
        run: |
          if ! git diff --cached --quiet; then
            git config --local user.email "actions@github.com"
            git config --local user.name "GitHub Actions"
            git commit -m "chore: auto update [skip ci]"
            git push
            echo "changes_committed=true" >> $GITHUB_OUTPUT
          else
            echo "changes_committed=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    needs:
      - update
    if: needs.update.outputs.changes_committed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      build-date: ${{steps.date.outputs.date}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Install system dependencies
        run: sudo apt install -y p7zip

      - name: Get date str
        id: date
        run: echo "date=$(date +'%y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Package files into 7z and tar.gz
        run: |
          mkdir artifacts
          tar -czf artifacts/fcitx5_dicts.tar.gz -C ./data/fcitx5_dicts .
          tar -czf artifacts/rime_dicts.tar.gz -C ./data/rime_dicts .
          tar -czf artifacts/titles.tar.gz -C ./data/titles .
          (cd ./data/fcitx5_dicts && 7z a ../../artifacts/fcitx5_dicts.7z ./*)
          (cd ./data/rime_dicts && 7z a ../../artifacts/rime_dicts.7z ./*)
          (cd ./data/titles && 7z a ../../artifacts/titles_dicts.7z ./*)

      - name: Publish
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.date.outputs.build-date }}
          name: Release ${{ steps.date.outputs.build-date }}
          body: |
            游戏版本: ${{ needs.update.outputs.current_version }}
            **更新内容**: [点击查看完整的对比文件](https://github.com/WantChane/fcitx5-pinyin-arknights/blob/main/data/changes.md)
          files: artifacts/*
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
